using FYP_Management.HelperClasses;
using System;
using System.Data;
using System.Windows;
using System.Windows.Controls;


namespace FYP_Management.Views.Students
{
    public partial class StudentMainView : UserControl
    {
        public StudentMainView()
        {
            InitializeComponent();
            LoadData();
        }

        private void AddStuBtn(object sender, RoutedEventArgs e)
        {
            var addStudent = new AddStudentView();
            addStudent.ShowDialog();
            SearchBar.Text = null;
            LoadData();
        }

        private void UpdateStudentBtnClick(object sender, RoutedEventArgs e)
        {
            if (Grid.SelectedItem is not DataRowView row)
            {
                MessageBox.Show("Please Select a value from Table", "Alert",
                                MessageBoxButton.OK, MessageBoxImage.Warning);
                return;
            }

            try
            {
                var ustu = new UpdateStudentView(
                    row.Row.ItemArray[1].ToString(),
                    row.Row.ItemArray[2].ToString(),
                    row.Row.ItemArray[3].ToString(),
                    row.Row.ItemArray[4].ToString(),
                    row.Row.ItemArray[5].ToString(),
                    (DateTime)row.Row.ItemArray[6],
                    row.Row.ItemArray[7].ToString(),
                    (int)row.Row.ItemArray[0]
                );
                ustu.ShowDialog();
                LoadData();
            }
            catch (Exception ex)
            {
                MessageBox.Show("Error Updating data into Database: " + ex.Message,
                                "Alert", MessageBoxButton.OK, MessageBoxImage.Warning);
            }
        }

        private void LoadData()
        {
            try
            {
                Grid.ItemsSource = Stu_Helper.Search(SearchBar.Text).DefaultView;
            }
            catch (Exception ex)
            {
                MessageBox.Show("Error loading data from Database: " + ex.Message,
                                "Alert", MessageBoxButton.OK, MessageBoxImage.Warning);
            }
        }

        private void clearTxt_Click(object sender, RoutedEventArgs e)
        {
            SearchBar.Text = "";
        }

        private void SearchBar_TextChanged(object sender, TextChangedEventArgs e)
        {
            LoadData();
        }

        private void DeleteStudentButton_Click(object sender, RoutedEventArgs e)
        {
            if (Grid.SelectedItem is not DataRowView row)
            {
                MessageBox.Show("Please Select a Row From the Table", "Alert",
                                MessageBoxButton.OK, MessageBoxImage.Warning);
                return;
            }
            int id = Convert.ToInt32(row.Row["id"]);
            if (Stu_Helper.IsStudentInGroup(id))
            {
                MessageBox.Show("Cannot delete: this student is still assigned to a group.",
                                "Blocked", MessageBoxButton.OK, MessageBoxImage.Warning);
                return;
            }

            var confirm = MessageBox.Show(
                "Are you sure you want to delete this student?\n" +
                "This will also remove any group assignments.",
                "Confirm Delete",
                MessageBoxButton.YesNo,
                MessageBoxImage.Question
            );
            if (confirm != MessageBoxResult.Yes) return;

            try
            {
                Stu_Helper.DeleteStudent(id);
                LoadData();
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Error deleting student:\n{ex.Message}",
                                "Error", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }

        // Fired after the DataGrid auto-generates its columns
        private void Grid_AutoGeneratedColumns(object sender, EventArgs e)
        {
            if (Grid.Columns.Count > 0)
                Grid.Columns[0].Visibility = Visibility.Collapsed;
        }
    }
}
